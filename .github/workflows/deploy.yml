name: Deploy to AWS ECS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION : "us-east-1" #Change to reflect your Region

# Permission can be added at job level or workflow level    
permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout
jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3

      - name: Install ECS CLI
        run: |
          sudo curl -Lo /usr/local/bin/ecs-cli https://amazon-ecs-cli.s3.amazonaws.com/ecs-cli-linux-amd64-latest
          sudo chmod +x /usr/local/bin/ecs-cli

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::125308813332:role/medisync-deploy-role
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker images 
        run: |
          docker-compose build 
          docker-compose push 

      - name: Download task definition frontend
      run: |
        aws ecs describe-task-definition --task-definition frontend-def --query taskDefinition > task-definition-frontend.json

    - name: Download task definition backend
      run: |
        aws ecs describe-task-definition --task-definition frontend-def --query taskDefinition > task-definition-backend.json

      - name: Deploy Amazon ECS task definition frontend
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: task-definition-frontend.json
          service: frontend
          cluster: medisync
          wait-for-service-stability: true

      - name: Deploy Amazon ECS task definition backend
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: task-definition-backend.json
          service: backend
          cluster: medisync
          wait-for-service-stability: true